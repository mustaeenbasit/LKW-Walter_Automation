automation.interface = chrome

browser.chrome.driver.path = {\
        "linux": "./lib/chromedriver-linux64", \
        "mac": "./lib/chromedriver-mac", \
        "windows": "./lib/chromedriver-win.exe"}
browser.chrome.driver.log.path = ./log/chromedriver.log

browser.firefox.binary = {\
        "linux": "/usr/bin/firefox", \
        "mac": "/Applications/Firefox.app/Contents/MacOS/firefox", \
        "windows": "C:/Program Files (x86)/Mozilla Firefox/firefox.exe"}

browser.firefox.profile = default

# For future support...
#browser.ie.driver.path = ./lib/IEDriverServer-64.exe

# Parallelization Settings
parallel.enabled = false
parallel.threads = 3

# Wait and Timeout
perf.page.load.timeout = 4
perf.implicit.wait.seconds = 5
perf.explicit.wait.timeout.seconds = 15
perf.explicit.wait.polling.seconds = 2

# Logging
system.log_path = ./log/voodoo.log
handlers = java.util.logging.FileHandler, java.util.logging.ConsoleHandler

# File logging
java.util.logging.FileHandler.pattern = ./log/voodoo.log
java.util.logging.FileHandler.limit = 50000
#java.util.logging.FileHandler.limit = 1
java.util.logging.FileHandler.count = 1
#java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter
java.util.logging.FileHandler.formatter = java.util.logging.SimpleFormatter
java.util.logging.FileHandler.level = INFO

# Console logging
java.util.logging.ConsoleHandler.level = ALL
java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter

# Logging format
java.util.logging.SimpleFormatter.format = [%1$tm-%1$td-%1$tY %1$tk:%1$tM:%1$tS:%1$tL] %2$s%n%4$s: %5$s%6$s%n